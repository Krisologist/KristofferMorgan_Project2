pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'kristofferm/demo-web'
        DOCKER_TAG = 'latest' // Specify the Docker image tag
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from Git repository
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: 
                [[credentialsId: '26587cab-dede-4920-8757-afde88714bf3', url: 'https://github.com/Krisologist/KristofferMorgan_Project2.git']])
            }
        }

        stage('Build Docker Image') {
            steps {
                // Build Docker image
                script {
                    docker.build("${DOCKER_IMAGE}:${DOCKER_TAG}")
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                // Push Docker image to Docker registry
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dc3b300e-30f8-4c44-b141-fa164cef3528') {
                        docker.image("${DOCKER_IMAGE}:${DOCKER_TAG}").push()
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                // Deploy the application running in Docker containers
                sh 'docker-compose up -d'
            }
        }
    }

    post {
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
